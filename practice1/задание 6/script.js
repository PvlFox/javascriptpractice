// –ó–∞–¥–∞–Ω–∏–µ 6
const productManager = {
  products: [],

  createHitProduct: function(name, price) {
    const hitProduct = {
      name: name,
      price: price,
      isBestseller: true,
      discount: 0.1,
      inStock: true
    };

    this.products.push(hitProduct);
    console.log("–°–æ–∑–¥–∞–Ω —Ö–∏—Ç –ø—Ä–æ–¥–∞–∂:", hitProduct);
    return hitProduct;
  },

  convertToObjects: function(names, prices) {
    const products = [];

    for (let i = 0; i < names.length; i++) {
      products.push({
        name: names[i],
        price: prices[i],
        inStock: true
      });
    }

    return products;
  },

  showDiscount: function(item, quantity) {
    let discount = 0;

    if (quantity >= 10) {
      discount = 0.15;
    } else if (quantity >= 5) {
      discount = 0.1;
    } else if (quantity >= 3) {
      discount = 0.05;
    }

    const totalPrice = item.price * quantity;
    const discountAmount = totalPrice * discount;
    const finalPrice = totalPrice - discountAmount;

    console.log(`–¢–æ–≤–∞—Ä: ${item.name}`);
    console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${quantity}`);
    console.log(`–°–∫–∏–¥–∫–∞: ${discount * 100}%`);
    console.log(`–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞: ${finalPrice.toFixed(2)} —Ä—É–±.`);
  },

  updateAmount: function(itemName, quantity) {
    const product = this.products.find(p => p.name === itemName);

    if (product) {
      if (product.inStock && quantity <= 10) {
        console.log(`–¢–æ–≤–∞—Ä "${itemName}" –¥–æ—Å—Ç—É–ø–µ–Ω. –û—Å—Ç–∞—Ç–æ–∫: ${quantity} —à—Ç.`);
      } else if (!product.inStock) {
        console.log(`–¢–æ–≤–∞—Ä "${itemName}" –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
      } else {
        console.log(`–î–ª—è —Ç–æ–≤–∞—Ä–∞ "${itemName}" –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ 10 —à—Ç.`);
      }
    } else {
      console.log(`–¢–æ–≤–∞—Ä "${itemName}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  },

  sortProductsByPrice: function() {
    return [...this.products].sort((a, b) => a.price - b.price);
  },

  findProductsInPriceRange: function(minPrice, maxPrice) {
    return this.products.filter(product =>
      product.price >= minPrice && product.price <= maxPrice
    );
  },

  applyExtraDiscountToBestsellers: function(extraDiscountPercent) {
    const extra = extraDiscountPercent / 100;

    this.products.forEach(product => {
      if (product.isBestseller) {
        product.extraDiscount = extra;
        product.price = +(product.price * (1 - extra)).toFixed(2);
        console.log(`–î–æ–ø. —Å–∫–∏–¥–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –∫: ${product.name}, –Ω–æ–≤–∞—è —Ü–µ–Ω–∞: ${product.price} —Ä—É–±.`);
      }
    });
  }
};

// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—ã—á–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
const names = ["–§–∏—Ç–Ω–µ—Å-–±—Ä–∞—Å–ª–µ—Ç", "–ù–∞—É—à–Ω–∏–∫–∏", "–ß–µ—Ö–æ–ª –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞"];
const prices = [2500, 4500, 800];
const products = productManager.convertToObjects(names, prices);
productManager.products = products;

// –î–æ–±–∞–≤–∏–º —Ç–æ–≤–∞—Ä—ã-—Ö–∏—Ç—ã
productManager.createHitProduct('iPhone 13 Pro', 275000);
productManager.createHitProduct('Samsung Galaxy', 150000);

// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ü–µ–Ω–µ
console.log("üîΩ –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –ø–æ —Ü–µ–Ω–µ:");
console.log(productManager.sortProductsByPrice());

// –ü–æ–∏—Å–∫ –ø–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É —Ü–µ–Ω
console.log("üîç –¢–æ–≤–∞—Ä—ã –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 1000 - 10000 —Ä—É–±:");
console.log(productManager.findProductsInPriceRange(1000, 10000));

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Å–∫–∏–¥–∫–∏ –∫ —Ö–∏—Ç–∞–º
console.log("üí∏ –ü—Ä–∏–º–µ–Ω—è–µ–º –¥–æ–ø. —Å–∫–∏–¥–∫—É 5% –∫ —Ö–∏—Ç–∞–º –ø—Ä–æ–¥–∞–∂:");
productManager.applyExtraDiscountToBestsellers(5);

// –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ —Å–∫–∏–¥–∫–∏
console.log("‚úÖ –¢–æ–≤–∞—Ä—ã –ø–æ—Å–ª–µ —Å–∫–∏–¥–∫–∏:");
console.log(productManager.products);
